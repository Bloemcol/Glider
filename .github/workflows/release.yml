name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
jobs:
  play-store:
    name: Play Store
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: 2.11.0-0.1.pre
          channel: beta
      - name: Cache pub
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
      - name: Get pub
        run: flutter pub get
      - name: Generate code
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Check formatting
        run: flutter format -n --set-exit-if-changed .
      - name: Analyze code
        run: flutter analyze
      - name: Get Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
      - name: Build Android App Bundle
        run: flutter build appbundle
      - name: Upload APK artifact
        uses: actions/upload-artifact@v1
        with:
          name: app-release.aab
          path: build/app/outputs/apk/release/app-release.aab
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true
      - name: Release to Google Play
        env:
          SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
          SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        run: bundle exec fastlane run supply aab:build/app/outputs/bundle/release/app-release.aab
